import json
import time
import requests
from google.oauth2 import service_account
import google.auth.transport.requests

# === C·∫•u h√¨nh Firebase ===
SERVICE_ACCOUNT_FILE = "./checkin-a507c-firebase-adminsdk-fbsvc-85f5c57705.json"
SCOPES = ["https://www.googleapis.com/auth/firebase.messaging"]

# === B·ªô nh·ªõ cache access token ƒë·ªÉ kh√¥ng ph·∫£i refresh li√™n t·ª•c ===
_cached_token = None
_cached_token_expiry = 0


def get_access_token():
    """L·∫•y access token t·ª´ service account, c√≥ cache."""
    global _cached_token, _cached_token_expiry

    # N·∫øu token v·∫´n c√≤n h·∫°n th√¨ d√πng l·∫°i
    if _cached_token and time.time() < _cached_token_expiry:
        return _cached_token

    credentials = service_account.Credentials.from_service_account_file(
        SERVICE_ACCOUNT_FILE, scopes=SCOPES
    )
    request = google.auth.transport.requests.Request()
    credentials.refresh(request)

    _cached_token = credentials.token
    # Token th∆∞·ªùng c√≥ h·∫°n 1 gi·ªù => cache 55 ph√∫t
    _cached_token_expiry = time.time() + 55 * 60
    return _cached_token


def send_fcm(token: str, title: str, body: str, data: dict = None):
    """
    G·ª≠i th√¥ng b√°o FCM ƒë·∫øn thi·∫øt b·ªã c·ª• th·ªÉ.
    Args:
        token (str): FCM token c·ªßa client
        title (str): Ti√™u ƒë·ªÅ th√¥ng b√°o
        body (str): N·ªôi dung th√¥ng b√°o
        data (dict): D·ªØ li·ªáu b·ªï sung (t√πy ch·ªçn)
    Returns:
        dict: Ph·∫£n h·ªìi t·ª´ FCM
    """
    try:
        access_token = get_access_token()

        credentials = service_account.Credentials.from_service_account_file(
            SERVICE_ACCOUNT_FILE, scopes=SCOPES
        )
        project_id = credentials.project_id

        url = f"https://fcm.googleapis.com/v1/projects/{project_id}/messages:send"

        message = {
            "message": {
                "token": token,
                "notification": {
                    "title": title,
                    "body": body,
                },
            }
        }

        # N·∫øu c√≥ data k√®m theo th√¨ th√™m v√†o message
        if data:
            message["message"]["data"] = data

        headers = {
            "Authorization": f"Bearer {access_token}",
            "Content-Type": "application/json; UTF-8",
        }

        response = requests.post(url, headers=headers, data=json.dumps(message))

        if response.status_code != 200:
            print(f"‚ùå FCM error: {response.text}")
        else:
            print(f"‚úÖ FCM sent to {token[:15]}...")

        return {
            "status_code": response.status_code,
            "response": response.text
        }

    except Exception as e:
        print(f"üî• L·ªói g·ª≠i FCM: {e}")
        return {"error": str(e)}
